{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Celda.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Celda({\n  value,\n  view,\n  addScore,\n  id\n}) {\n  const handleClick = () => {\n    if (view) {\n      // Solo permite hacer clic si la celda está visible\n      addScore(value, id); // Lógica para agregar puntaje\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 50,\n      height: 50\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      id: id,\n      onClick: handleClick,\n      children: [view ? value : \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = Celda;\nexport default Celda;\nvar _c;\n$RefreshReg$(_c, \"Celda\");","map":{"version":3,"names":["Celda","value","view","addScore","id","handleClick","_jsxDEV","style","width","height","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Celda.js"],"sourcesContent":["function Celda({ value, view, addScore, id }) {\r\n    const handleClick = () => {\r\n        if (view) { // Solo permite hacer clic si la celda está visible\r\n            addScore(value, id); // Lógica para agregar puntaje\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: 50, height: 50 }}>\r\n            <button className=\"cell\" id={id} onClick={handleClick}>\r\n                {view ? value : \" \"} {/* Muestra el valor si 'view' es true */}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Celda;\r\n"],"mappings":";;AAAA,SAASA,KAAKA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAG,CAAC,EAAE;EAC1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIH,IAAI,EAAE;MAAE;MACRC,QAAQ,CAACF,KAAK,EAAEG,EAAE,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,oBACIE,OAAA;IAAKC,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,eAClCJ,OAAA;MAAQK,SAAS,EAAC,MAAM;MAACP,EAAE,EAAEA,EAAG;MAACQ,OAAO,EAAEP,WAAY;MAAAK,QAAA,GACjDR,IAAI,GAAGD,KAAK,GAAG,GAAG,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACC,EAAA,GAdQjB,KAAK;AAgBd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}