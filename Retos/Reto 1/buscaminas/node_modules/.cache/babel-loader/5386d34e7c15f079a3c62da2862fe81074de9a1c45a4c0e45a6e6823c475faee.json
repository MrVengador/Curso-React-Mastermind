{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  // Usamos useState para manejar el tiempo\n  const [seconds, setSeconds] = useState(0);\n\n  // useEffect para configurar el temporizador\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds + 1);\n    }, 1000); // Se incrementa cada segundo\n\n    // Limpiar el intervalo cuando el componente se desmonte\n    return () => clearInterval(intervalId);\n  }, []); // El array vacío significa que este efecto solo se ejecuta una vez cuando se monta el componente\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [seconds, \" segs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"mcG2hTHI4q8+uIAAnRxppoT2y1s=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","_s","seconds","setSeconds","intervalId","setInterval","prevSeconds","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = () => {\r\n    // Usamos useState para manejar el tiempo\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    // useEffect para configurar el temporizador\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setSeconds(prevSeconds => prevSeconds + 1);\r\n        }, 1000); // Se incrementa cada segundo\r\n\r\n        // Limpiar el intervalo cuando el componente se desmonte\r\n        return () => clearInterval(intervalId);\r\n    }, []); // El array vacío significa que este efecto solo se ejecuta una vez cuando se monta el componente\r\n\r\n    return (\r\n        <div>\r\n            <h1>{seconds} segs</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCF,UAAU,CAACG,WAAW,IAAIA,WAAW,GAAG,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIL,OAAA;IAAAS,QAAA,eACIT,OAAA;MAAAS,QAAA,GAAKN,OAAO,EAAC,OAAK;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd,CAAC;AAACX,EAAA,CAnBID,KAAK;AAAAa,EAAA,GAALb,KAAK;AAqBX,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}