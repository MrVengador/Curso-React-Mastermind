{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Celda.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Celda({\n  id,\n  value,\n  onGameOver,\n  addScore\n}) {\n  _s();\n  // Usamos useState para manejar si la celda ha sido \"revelada\" o no.\n  const [view, setView] = useState(false);\n  let valor = \" \"; // Sin clickear\n\n  if (view) {\n    valor = value; // Si está vista, mostrar el valor de la celda\n    if (value === \"💣\") {\n      // onGameOver(); // Llamar a la función para manejar el fin del juego\n    } else {\n      addScore(valor); // Incrementar el puntaje\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      id: id,\n      onClick: () => setView(true) // Cambiar el estado al hacer clic\n      ,\n      children: valor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Celda, \"1AUQlsBdUV4J85jsdRUsiHhgDRM=\");\n_c = Celda;\nexport default Celda;\nvar _c;\n$RefreshReg$(_c, \"Celda\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Celda","id","value","onGameOver","addScore","_s","view","setView","valor","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Celda.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Celda({ id, value, onGameOver, addScore }) {\r\n    // Usamos useState para manejar si la celda ha sido \"revelada\" o no.\r\n    const [view, setView] = useState(false);\r\n\r\n    let valor = \" \"; // Sin clickear\r\n\r\n    if (view) {\r\n        valor = value; // Si está vista, mostrar el valor de la celda\r\n        if (value === \"💣\") {\r\n            // onGameOver(); // Llamar a la función para manejar el fin del juego\r\n        }\r\n        else {\r\n            addScore(valor); // Incrementar el puntaje\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"cell\"\r\n                id={id}\r\n                onClick={() => setView(true)} // Cambiar el estado al hacer clic\r\n            >\r\n                {/* Contenido de la celda */}\r\n                {valor}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Celda;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvC,IAAIW,KAAK,GAAG,GAAG,CAAC,CAAC;;EAEjB,IAAIF,IAAI,EAAE;IACNE,KAAK,GAAGN,KAAK,CAAC,CAAC;IACf,IAAIA,KAAK,KAAK,IAAI,EAAE;MAChB;IAAA,CACH,MACI;MACDE,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC;IACrB;EACJ;EAEA,oBACIT,OAAA;IAAAU,QAAA,eACIV,OAAA;MACIW,SAAS,EAAC,MAAM;MAChBT,EAAE,EAAEA,EAAG;MACPU,OAAO,EAAEA,CAAA,KAAMJ,OAAO,CAAC,IAAI,CAAE,CAAC;MAAA;MAAAE,QAAA,EAG7BD;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACV,EAAA,CA5BQL,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}