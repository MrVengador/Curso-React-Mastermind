{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  MaxTime\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(MaxTime);\n  useEffect(() => {\n    setSeconds(MaxTime); // Resetear segundos cuando MaxTime cambie\n  }, [MaxTime]);\n  useEffect(() => {\n    if (seconds <= 0) return;\n    const intervalId = setInterval(() => {\n      setSeconds(prevSeconds => {\n        if (prevSeconds <= 1) {\n          clearInterval(intervalId);\n          return 0;\n        }\n        return prevSeconds - 1;\n      });\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [seconds]); // Ejecutar cuando `seconds` cambie\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [seconds, \" seg\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"+opEN2uJULtaJ+VS+r+jTNoT0Hw=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","MaxTime","_s","seconds","setSeconds","intervalId","setInterval","prevSeconds","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = ({ MaxTime }) => {\r\n    const [seconds, setSeconds] = useState(MaxTime);\r\n\r\n    useEffect(() => {\r\n        setSeconds(MaxTime); // Resetear segundos cuando MaxTime cambie\r\n    }, [MaxTime]);\r\n\r\n    useEffect(() => {\r\n        if (seconds <= 0) return;\r\n\r\n        const intervalId = setInterval(() => {\r\n            setSeconds(prevSeconds => {\r\n                if (prevSeconds <= 1) {\r\n                    clearInterval(intervalId);\r\n                    return 0;\r\n                }\r\n                return prevSeconds - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, [seconds]); // Ejecutar cuando `seconds` cambie\r\n\r\n    return (\r\n        <div>\r\n            {seconds} seg\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACK,OAAO,CAAC;EAE/CJ,SAAS,CAAC,MAAM;IACZO,UAAU,CAACH,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbJ,SAAS,CAAC,MAAM;IACZ,IAAIM,OAAO,IAAI,CAAC,EAAE;IAElB,MAAME,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCF,UAAU,CAACG,WAAW,IAAI;QACtB,IAAIA,WAAW,IAAI,CAAC,EAAE;UAClBC,aAAa,CAACH,UAAU,CAAC;UACzB,OAAO,CAAC;QACZ;QACA,OAAOE,WAAW,GAAG,CAAC;MAC1B,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,oBACIJ,OAAA;IAAAU,QAAA,GACKN,OAAO,EAAC,MACb;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAACX,EAAA,CA5BIF,KAAK;AAAAc,EAAA,GAALd,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}