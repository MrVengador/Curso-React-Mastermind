{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  MaxTime,\n  Restart\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(MaxTime);\n  useEffect(() => {\n    if (Restart) {\n      setSeconds(MaxTime); // Reinicia correctamente el tiempo\n    }\n  }, [Restart, MaxTime]); // Solo se ejecuta cuando Restart cambia\n\n  useEffect(() => {\n    if (seconds <= 0) return; // Evita que siga contando en negativo\n\n    const idTemporizador = setInterval(() => {\n      setSeconds(prevSeconds => prevSeconds - 1);\n    }, 1000);\n    return () => clearInterval(idTemporizador); // Limpia el temporizador antes de crear uno nuevo\n  }, [seconds]); // Se ejecuta cuando `seconds` cambia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lcdText text-danger pe-2 m-2 borderInsideS\",\n    children: seconds + \" seg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"+opEN2uJULtaJ+VS+r+jTNoT0Hw=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","MaxTime","Restart","_s","seconds","setSeconds","idTemporizador","setInterval","prevSeconds","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = ({ MaxTime, Restart }) => {\r\n    const [seconds, setSeconds] = useState(MaxTime);\r\n\r\n    useEffect(() => {\r\n        if (Restart) {\r\n            setSeconds(MaxTime); // Reinicia correctamente el tiempo\r\n        }\r\n    }, [Restart, MaxTime]); // Solo se ejecuta cuando Restart cambia\r\n\r\n    useEffect(() => {\r\n        if (seconds <= 0) return; // Evita que siga contando en negativo\r\n\r\n        const idTemporizador = setInterval(() => {\r\n            setSeconds(prevSeconds => prevSeconds - 1);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(idTemporizador); // Limpia el temporizador antes de crear uno nuevo\r\n    }, [seconds]); // Se ejecuta cuando `seconds` cambia\r\n\r\n    return (\r\n        <div className='lcdText text-danger pe-2 m-2 borderInsideS'>\r\n            {seconds + \" seg\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACK,OAAO,CAAC;EAE/CJ,SAAS,CAAC,MAAM;IACZ,IAAIK,OAAO,EAAE;MACTG,UAAU,CAACJ,OAAO,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC,EAAE,CAACC,OAAO,EAAED,OAAO,CAAC,CAAC,CAAC,CAAC;;EAExBJ,SAAS,CAAC,MAAM;IACZ,IAAIO,OAAO,IAAI,CAAC,EAAE,OAAO,CAAC;;IAE1B,MAAME,cAAc,GAAGC,WAAW,CAAC,MAAM;MACrCF,UAAU,CAACG,WAAW,IAAIA,WAAW,GAAG,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,cAAc,CAAC,CAAC,CAAC;EAChD,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,oBACIL,OAAA;IAAKW,SAAS,EAAC,4CAA4C;IAAAC,QAAA,EACtDP,OAAO,GAAG;EAAM;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAACZ,EAAA,CAxBIH,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}