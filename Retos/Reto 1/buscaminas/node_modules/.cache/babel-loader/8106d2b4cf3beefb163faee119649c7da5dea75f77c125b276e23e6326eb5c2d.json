{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Celda.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Celda({\n  id,\n  value,\n  onGameOver,\n  addScore\n}) {\n  _s();\n  const [view, setView] = useState(false);\n  const handleClick = () => {\n    if (!view) {\n      // Solo ejecuta la lógica si no ha sido clickeada antes\n      setView(true); // Revela la celda\n      if (value === \"💣\") {\n        addScore(-1); // Incrementar el puntaje\n\n        // onGameOver(); // Llamar a la función para manejar el fin del juego\n      } else {\n        addScore(value); // Incrementar el puntaje\n        console.log(\"Valor es \" + value);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      id: id,\n      onClick: handleClick,\n      children: [view ? value : \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Celda, \"1AUQlsBdUV4J85jsdRUsiHhgDRM=\");\n_c = Celda;\nexport default Celda;\nvar _c;\n$RefreshReg$(_c, \"Celda\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Celda","id","value","onGameOver","addScore","_s","view","setView","handleClick","console","log","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Celda.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Celda({ id, value, onGameOver, addScore }) {\r\n    const [view, setView] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        if (!view) { // Solo ejecuta la lógica si no ha sido clickeada antes\r\n            setView(true); // Revela la celda\r\n            if (value === \"💣\") {\r\n                addScore(-1); // Incrementar el puntaje\r\n\r\n                // onGameOver(); // Llamar a la función para manejar el fin del juego\r\n            } else {\r\n                addScore(value); // Incrementar el puntaje\r\n                console.log(\"Valor es \" + value);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"cell\" id={id} onClick={handleClick}>\r\n                {view ? value : \" \"} {/* Muestra el valor solo si view es true */}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Celda;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACF,IAAI,EAAE;MAAE;MACTC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACf,IAAIL,KAAK,KAAK,IAAI,EAAE;QAChBE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEd;MACJ,CAAC,MAAM;QACHA,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC;QACjBO,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGR,KAAK,CAAC;MACpC;IACJ;EACJ,CAAC;EAED,oBACIH,OAAA;IAAAY,QAAA,eACIZ,OAAA;MAAQa,SAAS,EAAC,MAAM;MAACX,EAAE,EAAEA,EAAG;MAACY,OAAO,EAAEL,WAAY;MAAAG,QAAA,GACjDL,IAAI,GAAGJ,KAAK,GAAG,GAAG,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACZ,EAAA,CAxBQL,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA0Bd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}