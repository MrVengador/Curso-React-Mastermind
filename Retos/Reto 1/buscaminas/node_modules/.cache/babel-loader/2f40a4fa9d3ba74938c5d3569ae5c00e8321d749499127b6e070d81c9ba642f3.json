{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Celda.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Celda({\n  id,\n  value,\n  onGameOver,\n  addScore,\n  view\n}) {\n  // const [view, setView] = useState(false);\n\n  function handleClick() {\n    if (!view) {\n      // Solo ejecuta la lógica si no ha sido clickeada antes\n      //setView(true); // Revela la celda\n      if (value === \"💣\") {\n        addScore(-1); // Incrementar el puntaje\n        alert(\"GAME OVER\");\n\n        // onGameOver(); // Llamar a la función para manejar el fin del juego\n      } else {\n        addScore(value); // Incrementar el puntaje\n        console.log(\"Valor es \" + value);\n      }\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 50,\n      height: 50\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      id: id,\n      onClick: handleClick,\n      children: view ? value : \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = Celda;\nexport default Celda;\nvar _c;\n$RefreshReg$(_c, \"Celda\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Celda","id","value","onGameOver","addScore","view","handleClick","alert","console","log","style","width","height","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Celda.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Celda({ id, value, onGameOver, addScore, view }) {\r\n    // const [view, setView] = useState(false);\r\n\r\n    function handleClick() {\r\n        if (!view) { // Solo ejecuta la lógica si no ha sido clickeada antes\r\n            //setView(true); // Revela la celda\r\n            if (value === \"💣\") {\r\n                addScore(-1); // Incrementar el puntaje\r\n                alert(\"GAME OVER\");\r\n\r\n                // onGameOver(); // Llamar a la función para manejar el fin del juego\r\n            } else {\r\n                addScore(value); // Incrementar el puntaje\r\n                console.log(\"Valor es \" + value);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ width: 50, height: 50 }}>\r\n            <button className=\"cell\" id={id}\r\n                onClick={handleClick}\r\n            >\r\n                {view ? value : \" \"}\r\n                {/* Muestra el valor solo si view es true */}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Celda;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EACtD;;EAEA,SAASC,WAAWA,CAAA,EAAG;IACnB,IAAI,CAACD,IAAI,EAAE;MAAE;MACT;MACA,IAAIH,KAAK,KAAK,IAAI,EAAE;QAChBE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACdG,KAAK,CAAC,WAAW,CAAC;;QAElB;MACJ,CAAC,MAAM;QACHH,QAAQ,CAACF,KAAK,CAAC,CAAC,CAAC;QACjBM,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGP,KAAK,CAAC;MACpC;IACJ;EACJ;EAAC;EAGD,oBACIH,OAAA;IAAKW,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,eAClCd,OAAA;MAAQe,SAAS,EAAC,MAAM;MAACb,EAAE,EAAEA,EAAG;MAC5Bc,OAAO,EAAET,WAAY;MAAAO,QAAA,EAEpBR,IAAI,GAAGH,KAAK,GAAG;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACC,EAAA,GA7BQpB,KAAK;AA+Bd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}