{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Tablero.js\",\n  _s = $RefreshSig$();\nimport React, { use, useState } from 'react';\nimport Celda from './Celda';\nimport Timer from './Timer';\nimport Size from './Proporciones';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tablero() {\n  _s();\n  // Se recibe size como prop correctamente\n\n  const [MaxTime, setTime] = useState(0);\n  const [Played, setReset] = useState(false);\n  const [size, setSize] = useState(10);\n  const time = /*#__PURE__*/_jsxDEV(Timer, {\n    MaxTime: MaxTime,\n    Restart: Played\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 18\n  }, this);\n  let currentSize = size;\n  function RandomBombs() {\n    const bombsCount = Math.floor(Math.random() * currentSize) + 1; //\n    console.log(\"Hay \" + bombsCount + \" en el tablero.\");\n    let newTab = Array(currentSize * currentSize).fill(\" \");\n    for (let i = 0; i < bombsCount; i++) {\n      randomPos = Math.floor(Math.random() * (currentSize * currentSize));\n      newTab[randomPos] = \"üí£\";\n    }\n    return newTab;\n  }\n\n  //generar pos de las bombas al azar en base al size posteriormente.\n  const Tableros = {\nn    1: [\"1\", \"1\", \"1\", \"0\", \"0\", \"1\", \"üí£\", \"1\", \"0\", \"0\", \"1\", \"üí£\", \"1\", \"0\", \"0\", \"1\", \"3\", \"3\", \"1\", \"0\", \"1\", \"3\", \"3\", \"1\", \"1\", \"1\", \"üí£\", \"üí£\", \"1\", \"0\", \"1\", \"üí£\", \"üí£\", \"1\", \"1\", \"1\", \"2\", \"3\", \"2\", \"1\", \"1\", \"2\", \"2\", \"1\", \"0\", \"0\", \"0\", \"1\", \"üí£\", \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\", \"0\", \"0\", \"1\", \"2\", \"üí£\", \"1\", \"0\", \"0\", \"1\", \"üí£\", \"1\", \"0\", \"1\", \"üí£\", \"2\", \"1\", \"0\", \"0\", \"1\", \"2\", \"1\", \"0\", \"1\", \"2\", \"üí£\", \"1\", \"0\", \"0\", \"0\", \"1\", \"üí£\", \"1\", \"1\", \"2\", \"üí£\", \"1\", \"0\", \"0\"]\n  };\n  const sizeController = newSize => {\n    //Es lo mismo que una funcion pero m√°s corto, \"recordar\".\n    currentSize = newSize;\n    console.log(\"El nuevo size es :\" + currentSize);\n  };\n\n  //Definir pro, valores componente\n  const [MapValues, setMapValues] = useState(Array(size * size).fill(\" \"));\n  const celdas = MapValues.map((value, index) => /*#__PURE__*/_jsxDEV(Celda, {\n    value: value,\n    id: index,\n    addScore: AddScore\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this)); //Agrego la clase playing si se esta jugado\n\n  function RandomBoard() {\n    return Math.floor(Math.random() * 3) + 1;\n  }\n  const btnPlayGame = () => {\n    console.log(\"Size es :\" + currentSize);\n    setSize(currentSize);\n    setMapValues(Array(currentSize * currentSize).fill(\" \"));\n    setTime(60); // Reiniciar el tiempo a 60 segundos\n\n    setReset(true); // Establecer el estado a `true` para reiniciar el temporizador\n\n    // Despu√©s de un ciclo de renderizado, establecemos `Restart` a `false` para permitir futuros reinicios\n    setTimeout(() => {\n      setReset(false);\n    }, 0); // Este setTimeout con 0 milisegundos asegura que el valor de `Restart` vuelva a `false` inmediatamente despu√©s del renderizado.\n\n    console.log(\"timer: \" + MaxTime);\n  };\n\n  // Estado para manejar el puntaje\n  const [score, setScore] = useState(0); //Inicializo el score en 0\n\n  function AddScore(id) {\n    //se llama desde celda\n    if (Played == false) {\n      const cellValue = Tableros[1][id]; // Obtiene el valor de la celda\n      console.log(\"cell \" + id + \": \" + cellValue);\n      viewValue(id);\n      if (cellValue === \"üí£\") {\n        setScore(0); // Si es una bomba, reinicia el puntaje\n        console.log(\"Game Over\");\n        GameOver();\n      } else {\n        if (cellValue !== \" \") {\n          setScore(parseInt(score) + parseInt(cellValue));\n        }\n      }\n    }\n  }\n  function viewValue(id) {\n    //ver valor\n    const valoresNuevos = MapValues.slice();\n    valoresNuevos[id] = Tableros[1][id];\n    console.log(MapValues[id]);\n    setMapValues(valoresNuevos);\n  }\n\n  //Estado de game over\n  function GameOver() {\n    setReset(true); // Establecer el estado a `true` para reiniciar el temporizador\n    setTime(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark rounded-5 mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-warning-subtle text-dark px-5 py-2 rounded-top-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Buscaminas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row p-2 rounded-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"col-6 bg-light border border-black \",\n          id: \"time\",\n          children: time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"col-6 bg-light border border-black \",\n          id: \"score\",\n          children: score + \" pts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-1 mt-5 mb-4 mx-5 \",\n      id: \"board\",\n      style: {\n        gridTemplateRows: `repeat(${size}, 1fr)`,\n        gridTemplateColumns: `repeat(${size}, 0fr)`\n      },\n      children: celdas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Size, {\n        setBoardSize: sizeController\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success px-5 mb-3\",\n        onClick: btnPlayGame,\n        children: \"Jugar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n}\n_s(Tablero, \"NzFrX6cPC4p+RtQzXxktJuRcroY=\");\n_c = Tablero;\nexport default Tablero;\nvar _c;\n$RefreshReg$(_c, \"Tablero\");","map":{"version":3,"names":["React","use","useState","Celda","Timer","Size","jsxDEV","_jsxDEV","Tablero","_s","MaxTime","setTime","Played","setReset","size","setSize","time","Restart","fileName","_jsxFileName","lineNumber","columnNumber","currentSize","RandomBombs","bombsCount","Math","floor","random","console","log","newTab","Array","fill","i","randomPos","Tableros","sizeController","newSize","MapValues","setMapValues","celdas","map","value","index","id","addScore","AddScore","RandomBoard","btnPlayGame","setTimeout","score","setScore","cellValue","viewValue","GameOver","parseInt","valoresNuevos","slice","className","children","style","gridTemplateRows","gridTemplateColumns","setBoardSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programaci√≥n/Programaci√≥n Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Tablero.js"],"sourcesContent":["import React, { use, useState } from 'react';\r\nimport Celda from './Celda';\r\nimport Timer from './Timer';\r\nimport Size from './Proporciones'\r\n\r\nfunction Tablero() { // Se recibe size como prop correctamente\r\n\r\n    const [MaxTime, setTime] = useState(0);\r\n    const [Played, setReset] = useState(false);\r\n    const [size, setSize] = useState(10);\r\n\r\n    const time = <Timer MaxTime={MaxTime} Restart={Played} />;\r\n    let currentSize = size;\r\n\r\n\r\n    function RandomBombs() {\r\n        const bombsCount = Math.floor(Math.random() * currentSize) + 1; //\r\n        console.log(\"Hay \" + bombsCount + \" en el tablero.\");\r\n\r\n        let newTab = Array(currentSize * currentSize).fill(\" \");\r\n        for (let i = 0; i < bombsCount; i++) {\r\n            randomPos = Math.floor(Math.random() * (currentSize * currentSize));\r\n            newTab[randomPos] = \"üí£\";\r\n        }\r\n\r\n        return newTab;\r\n\r\n    }\r\n\r\n\r\n\r\n    //generar pos de las bombas al azar en base al size posteriormente.\r\n    const Tableros = {\r\n        0: [\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \",\r\n            \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"\r\n        ],\r\n        1: [\r\n            \"1\", \"1\", \"1\", \"0\", \"0\", \"1\", \"üí£\", \"1\", \"0\", \"0\",\r\n            \"1\", \"üí£\", \"1\", \"0\", \"0\", \"1\", \"3\", \"3\", \"1\", \"0\",\r\n            \"1\", \"3\", \"3\", \"1\", \"1\", \"1\", \"üí£\", \"üí£\", \"1\", \"0\",\r\n            \"1\", \"üí£\", \"üí£\", \"1\", \"1\", \"1\", \"2\", \"3\", \"2\", \"1\",\r\n            \"1\", \"2\", \"2\", \"1\", \"0\", \"0\", \"0\", \"1\", \"üí£\", \"1\",\r\n            \"0\", \"0\", \"0\", \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"1\",\r\n            \"1\", \"1\", \"0\", \"0\", \"1\", \"2\", \"üí£\", \"1\", \"0\", \"0\",\r\n            \"1\", \"üí£\", \"1\", \"0\", \"1\", \"üí£\", \"2\", \"1\", \"0\", \"0\",\r\n            \"1\", \"2\", \"1\", \"0\", \"1\", \"2\", \"üí£\", \"1\", \"0\", \"0\",\r\n            \"0\", \"1\", \"üí£\", \"1\", \"1\", \"2\", \"üí£\", \"1\", \"0\", \"0\"\r\n        ],\r\n    };\r\n\r\n    const sizeController = (newSize) => { //Es lo mismo que una funcion pero m√°s corto, \"recordar\".\r\n        currentSize = newSize;\r\n        console.log(\"El nuevo size es :\" + currentSize);\r\n    };\r\n\r\n\r\n\r\n    //Definir pro, valores componente\r\n    const [MapValues, setMapValues] = useState(Array(size * size).fill(\" \"));\r\n    const celdas = MapValues.map((value, index) =>\r\n        <Celda key={index} value={value} id={index}\r\n            addScore={AddScore} />); //Agrego la clase playing si se esta jugado\r\n\r\n\r\n\r\n\r\n    function RandomBoard() {\r\n        return Math.floor(Math.random() * 3) + 1;\r\n    }\r\n\r\n\r\n    const btnPlayGame = () => {\r\n\r\n        console.log(\"Size es :\" + currentSize);\r\n        setSize(currentSize);\r\n        setMapValues(Array(currentSize * currentSize).fill(\" \"));\r\n\r\n\r\n        setTime(60);  // Reiniciar el tiempo a 60 segundos\r\n\r\n        setReset(true);  // Establecer el estado a `true` para reiniciar el temporizador\r\n\r\n        // Despu√©s de un ciclo de renderizado, establecemos `Restart` a `false` para permitir futuros reinicios\r\n        setTimeout(() => {\r\n            setReset(false);\r\n        }, 0);  // Este setTimeout con 0 milisegundos asegura que el valor de `Restart` vuelva a `false` inmediatamente despu√©s del renderizado.\r\n\r\n\r\n        console.log(\"timer: \" + MaxTime);\r\n    };\r\n\r\n\r\n\r\n\r\n    // Estado para manejar el puntaje\r\n    const [score, setScore] = useState(0); //Inicializo el score en 0\r\n\r\n    function AddScore(id) { //se llama desde celda\r\n        if (Played == false) {\r\n            const cellValue = Tableros[1][id]; // Obtiene el valor de la celda\r\n            console.log(\"cell \" + id + \": \" + cellValue);\r\n            viewValue(id);\r\n\r\n            if (cellValue === \"üí£\") {\r\n                setScore(0); // Si es una bomba, reinicia el puntaje\r\n                console.log(\"Game Over\");\r\n                GameOver();\r\n            }\r\n            else {\r\n                if (cellValue !== \" \") {\r\n                    setScore(parseInt(score) + parseInt(cellValue));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function viewValue(id) { //ver valor\r\n        const valoresNuevos = MapValues.slice();\r\n        valoresNuevos[id] = Tableros[1][id];\r\n        console.log(MapValues[id])\r\n        setMapValues(valoresNuevos);\r\n\r\n    }\r\n\r\n\r\n    //Estado de game over\r\n    function GameOver() {\r\n        setReset(true);  // Establecer el estado a `true` para reiniciar el temporizador\r\n        setTime(0);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"bg-dark rounded-5 mt-5\">\r\n            <div className='bg-warning-subtle text-dark px-5 py-2 rounded-top-5'>\r\n                <h2 className=\"text-center\">Buscaminas</h2>\r\n                <div className='row p-2 rounded-3'>\r\n                    <h2 className='col-6 bg-light border border-black ' id='time'>{time}</h2>\r\n                    <h2 className='col-6 bg-light border border-black ' id='score'>{score + \" pts\"}</h2>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Contenedor del tablero donde se colocan las celdas */}\r\n            <div className='card p-1 mt-5 mb-4 mx-5 '\r\n                id='board' style={{\r\n                    gridTemplateRows: `repeat(${size}, 1fr)`,\r\n                    gridTemplateColumns: `repeat(${size}, 0fr)`,\r\n                }}>\r\n                {celdas}\r\n            </div>\r\n            <div>\r\n                <Size setBoardSize={sizeController} />\r\n\r\n                <button className='btn btn-success px-5 mb-3'\r\n                    onClick={btnPlayGame}>\r\n                    Jugar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tablero;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,GAAG,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,IAAI,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAAE;;EAEjB,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,IAAI,gBAAGT,OAAA,CAACH,KAAK;IAACM,OAAO,EAAEA,OAAQ;IAACO,OAAO,EAAEL;EAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACzD,IAAIC,WAAW,GAAGR,IAAI;EAGtB,SAASS,WAAWA,CAAA,EAAG;IACnB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAChEM,OAAO,CAACC,GAAG,CAAC,MAAM,GAAGL,UAAU,GAAG,iBAAiB,CAAC;IAEpD,IAAIM,MAAM,GAAGC,KAAK,CAACT,WAAW,GAAGA,WAAW,CAAC,CAACU,IAAI,CAAC,GAAG,CAAC;IACvD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,UAAU,EAAES,CAAC,EAAE,EAAE;MACjCC,SAAS,GAAGT,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,WAAW,GAAGA,WAAW,CAAC,CAAC;MACnEQ,MAAM,CAACI,SAAS,CAAC,GAAG,IAAI;IAC5B;IAEA,OAAOJ,MAAM;EAEjB;;EAIA;EACA,MAAMK,QAAQ,GAAG;IACb,CAAC,EAAE,CACC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAChD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CACnD;IACD,CAAC,EAAE,CACC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACjD,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACjD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}