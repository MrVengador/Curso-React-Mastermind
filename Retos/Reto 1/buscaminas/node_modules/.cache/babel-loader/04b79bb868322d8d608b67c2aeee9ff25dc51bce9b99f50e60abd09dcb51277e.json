{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  MaxTime\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(MaxTime); //Actualizo la variable seconds\n\n  useEffect(() => {\n    //Inicia el temporizador Orden 1\n    const idTemporizador = setInterval(\n    // seconds => seconds - 1 == setTimeLeft(function(prevTime) { return prevTime - 1;}\n    () => {\n      setSeconds(seconds => seconds - 1);\n    } //Accion/ función \n    , 1000 //    cada tiempo en ms se hara la acción\n    );\n\n    //Desmonta el temporizador Orden 3\n    return () => {\n      clearInterval(idTemporizador);\n    };\n  }, 1000);\n\n  //Orden 2\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lcdText text-danger pe-2 m-2 borderInsideS\",\n    children: seconds + \" seg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"+00k3J2Uszdizwr/lj4oh1+CrPA=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","MaxTime","_s","seconds","setSeconds","idTemporizador","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Timer = ({ MaxTime }) => {\r\n\r\n    const [seconds, setSeconds] = useState(MaxTime); //Actualizo la variable seconds\r\n\r\n    useEffect(() => {\r\n\r\n        //Inicia el temporizador Orden 1\r\n        const idTemporizador = setInterval(\r\n            // seconds => seconds - 1 == setTimeLeft(function(prevTime) { return prevTime - 1;}\r\n            () => { setSeconds(seconds => seconds - 1) } //Accion/ función \r\n            , 1000 //    cada tiempo en ms se hara la acción\r\n        )\r\n\r\n        //Desmonta el temporizador Orden 3\r\n        return () => {\r\n            clearInterval(idTemporizador);\r\n        }\r\n    }, 1000);\r\n\r\n\r\n\r\n\r\n    //Orden 2\r\n    return (\r\n        <div className='lcdText text-danger pe-2 m-2 borderInsideS'>\r\n            {seconds + \" seg\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACK,OAAO,CAAC,CAAC,CAAC;;EAEjDJ,SAAS,CAAC,MAAM;IAEZ;IACA,MAAMQ,cAAc,GAAGC,WAAW;IAC9B;IACA,MAAM;MAAEF,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC;IAAA,EAC3C,IAAI,CAAC;IACX,CAAC;;IAED;IACA,OAAO,MAAM;MACTI,aAAa,CAACF,cAAc,CAAC;IACjC,CAAC;EACL,CAAC,EAAE,IAAI,CAAC;;EAKR;EACA,oBACIN,OAAA;IAAKS,SAAS,EAAC,4CAA4C;IAAAC,QAAA,EACtDN,OAAO,GAAG;EAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAACX,EAAA,CA5BIF,KAAK;AAAAc,EAAA,GAALd,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}