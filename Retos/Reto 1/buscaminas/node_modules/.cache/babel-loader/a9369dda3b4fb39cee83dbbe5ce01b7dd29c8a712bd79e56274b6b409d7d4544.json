{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crist\\\\OneDrive\\\\Documentos\\\\Programaci\\xF3n\\\\Programaci\\xF3n Web\\\\Frontend\\\\React\\\\Retos\\\\Reto 1\\\\buscaminas\\\\src\\\\Components\\\\Celda.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, use } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Celda({\n  id,\n  value,\n  onGameOver,\n  addScore,\n  view\n}) {\n  _s();\n  const [ver, setView] = useState(false); //No se vera por default\n\n  useEffect(() => {\n    setView(view);\n  }, [view]); // Este useEffect se ejecuta cuando Restart o MaxTime cambian\n\n  function handleClick() {\n    //Se clickea, se ve y agrega o quita el puntaje\n    console.log(\"view: \" + view);\n    if (!view) view = true;\n    if (!view && value != \" \") {\n      // Solo ejecuta la lógica si no ha sido clickeada antes\n      view = true;\n      // setView(true); //Revela el valor\n\n      if (value === \"💣\") {\n        addScore(-1, id); // Death\n        alert(\"GAME OVER\");\n\n        // onGameOver(); // Llamar a la función para manejar el fin del juego\n      } else {\n        addScore(value, id); // + value\n        console.log(\"Valor es \" + value);\n      }\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 50,\n      height: 50\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cell\",\n      id: id,\n      onClick: handleClick,\n      children: ver ? value : \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n\n  //otra forma\n\n  // if (view) {\n  //     return (\n  //         <div style={{ width: 50, height: 50 }}>\n  //             <button className=\"cell\" id={id}\n  //                 onClick={handleClick}>\n  //                 {value}\n  //             </button>\n  //         </div>\n  //     );\n  // }\n\n  // else {\n  //     return (\n  //         <div style={{ width: 50, height: 50 }}>\n  //             <button className=\"cell\" id={id}\n  //                 onClick={handleClick}>\n  //                 {\" \"} // || &nbsp;\n  //             </button>\n  //         </div>\n  //     );\n  // }\n}\n_s(Celda, \"7Arcq4DaGKVwTgiTOe9x55inNmw=\");\n_c = Celda;\nexport default Celda;\nvar _c;\n$RefreshReg$(_c, \"Celda\");","map":{"version":3,"names":["React","useState","useEffect","use","jsxDEV","_jsxDEV","Celda","id","value","onGameOver","addScore","view","_s","ver","setView","handleClick","console","log","alert","style","width","height","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/crist/OneDrive/Documentos/Programación/Programación Web/Frontend/React/Retos/Reto 1/buscaminas/src/Components/Celda.js"],"sourcesContent":["import React, { useState, useEffect, use } from 'react';\r\n\r\nfunction Celda({ id, value, onGameOver, addScore, view }) {\r\n\r\n    const [ver, setView] = useState(false); //No se vera por default\r\n\r\n\r\n    useEffect(() => {\r\n        setView(view);\r\n\r\n    }, [view]); // Este useEffect se ejecuta cuando Restart o MaxTime cambian\r\n\r\n\r\n    function handleClick() { //Se clickea, se ve y agrega o quita el puntaje\r\n        console.log(\"view: \" + view);\r\n        if (!view)\r\n            view = true;\r\n\r\n        if (!view && value != \" \") { // Solo ejecuta la lógica si no ha sido clickeada antes\r\n            view = true;\r\n            // setView(true); //Revela el valor\r\n\r\n            if (value === \"💣\") {\r\n                addScore(-1, id); // Death\r\n                alert(\"GAME OVER\");\r\n\r\n                // onGameOver(); // Llamar a la función para manejar el fin del juego\r\n            } else {\r\n                addScore(value, id); // + value\r\n                console.log(\"Valor es \" + value);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ width: 50, height: 50 }}>\r\n            <button className=\"cell\" id={id}\r\n                onClick={handleClick}\r\n            >\r\n                {ver ? value : \" \"}\r\n                {/* {Si view es true, muestra valor, si es false, muestra \" \"} */}\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n\r\n    //otra forma\r\n\r\n    // if (view) {\r\n    //     return (\r\n    //         <div style={{ width: 50, height: 50 }}>\r\n    //             <button className=\"cell\" id={id}\r\n    //                 onClick={handleClick}>\r\n    //                 {value}\r\n    //             </button>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n\r\n    // else {\r\n    //     return (\r\n    //         <div style={{ width: 50, height: 50 }}>\r\n    //             <button className=\"cell\" id={id}\r\n    //                 onClick={handleClick}>\r\n    //                 {\" \"} // || &nbsp;\r\n    //             </button>\r\n    //         </div>\r\n    //     );\r\n    // }\r\n}\r\n\r\nexport default Celda;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,KAAKA,CAAC;EAAEC,EAAE;EAAEC,KAAK;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAEtD,MAAM,CAACC,GAAG,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAGxCC,SAAS,CAAC,MAAM;IACZY,OAAO,CAACH,IAAI,CAAC;EAEjB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC;;EAGZ,SAASI,WAAWA,CAAA,EAAG;IAAE;IACrBC,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGN,IAAI,CAAC;IAC5B,IAAI,CAACA,IAAI,EACLA,IAAI,GAAG,IAAI;IAEf,IAAI,CAACA,IAAI,IAAIH,KAAK,IAAI,GAAG,EAAE;MAAE;MACzBG,IAAI,GAAG,IAAI;MACX;;MAEA,IAAIH,KAAK,KAAK,IAAI,EAAE;QAChBE,QAAQ,CAAC,CAAC,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC;QAClBW,KAAK,CAAC,WAAW,CAAC;;QAElB;MACJ,CAAC,MAAM;QACHR,QAAQ,CAACF,KAAK,EAAED,EAAE,CAAC,CAAC,CAAC;QACrBS,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGT,KAAK,CAAC;MACpC;IACJ;EACJ;EAAC;EAGD,oBACIH,OAAA;IAAKc,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAE;IAAAC,QAAA,eAClCjB,OAAA;MAAQkB,SAAS,EAAC,MAAM;MAAChB,EAAE,EAAEA,EAAG;MAC5BiB,OAAO,EAAET,WAAY;MAAAO,QAAA,EAEpBT,GAAG,GAAGL,KAAK,GAAG;IAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;;EAIV;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAAChB,EAAA,CApEQN,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAsEd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}